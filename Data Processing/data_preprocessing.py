# -*- coding: utf-8 -*-
"""data_preprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-xekOXWcvisJ7rXGwUjZqs0VmQ5Z_YHk
"""

# Drowsiness Dataset - Data Preprocessing (Fixed & Optimized)

# Step 1: Install dependencies
!pip install -q opencv-python numpy tensorflow

# Step 2: Import required libraries
import os
import cv2
import numpy as np
import matplotlib.pyplot as plt
from tensorflow.keras.preprocessing.image import ImageDataGenerator
from google.colab import drive

# Step 3: Mount Google Drive (if dataset is stored there)
drive.mount('/content/drive')

# Step 4: Set dataset path (Ensure this matches your actual folder structure)
DATASET_PATH = "/content/drive/MyDrive/Colab Notebooks/AI Studio/Project/train"

# Step 5: Define image size and labels
IMAGE_SIZE = (64, 64)  # Resize all images to 64x64 pixels

LABELS = {
    "Closed": 1,   # Drowsy
    "Yawn": 1,     # Drowsy
    "Open": 0,     # Awake
    "no_yawn": 0   # Awake
}

# Step 6: Load and preprocess images
data = []
valid_extensions = (".jpg", ".jpeg", ".png")  # Ensure we only process images

for category, label in LABELS.items():
    folder_path = os.path.join(DATASET_PATH, category)

    if not os.path.exists(folder_path):
        print(f"‚ö†Ô∏è Warning: Folder {folder_path} not found!")
        continue

    for img_name in os.listdir(folder_path):  # Fixed: Now using correct subfolder path
        img_path = os.path.join(folder_path, img_name)

        if not img_name.endswith(valid_extensions):  # Skip non-image files
            print(f"Skipping: {img_name}")
            continue

        img = cv2.imread(img_path, cv2.IMREAD_COLOR)
        if img is None:
            print(f"‚ö†Ô∏è Error loading: {img_path}")
            continue

        img = cv2.resize(img, IMAGE_SIZE)  # Resize safely
        data.append([img, label])

# Ensure data is not empty before unpacking
if len(data) == 0:
    raise ValueError("üö® No valid images were loaded. Check dataset path & file formats!")

X, y = zip(*data)
X = np.array(X) / 255.0  # Normalize images (0 to 1 scale)
y = np.array(y)

# Step 8: Apply Data Augmentation
datagen = ImageDataGenerator(
    rotation_range=15,
    width_shift_range=0.1,
    height_shift_range=0.1,
    zoom_range=0.1,
    horizontal_flip=True
)

# Step 9: Save the processed dataset
np.savez("/content/drive/MyDrive/Colab Notebooks/AI Studio/Project/drowsiness_preprocessed.npz", X=X, y=y)

# Step 10: Display sample images
plt.figure(figsize=(10, 5))
for i in range(6):
    plt.subplot(2, 3, i+1)
    plt.imshow(X[i])
    plt.title("Drowsy" if y[i] == 1 else "Awake")
    plt.axis("off")
plt.show()

print("Drowsiness Dataset Preprocessed & Saved Successfully!")
